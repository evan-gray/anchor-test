name: 'Anchor Test'
description: 'An "anchor test" action that runs in ~1 minute.'
branding:
  icon: anchor
  color: blue
inputs:
  node-version:
    description: 'Version of node.js to use'
    required: false
    default: '20.11.0' # LTS
  solana-cli-version:
    description: 'Version of Solana CLI to use'
    required: false
    default: '1.17.1' # stable
  anchor-version:
    description: 'Version of Anchor to use'
    required: false
    default: '0.29.0' # latest
  features:
    description: 'Features to pass to cargo'
    required: false
    default: 'default'
  working-directory:
    description: 'Directory of the Anchor workspace'
    required: false
    default: '.'
runs:
  using: 'composite'
  steps:
    - uses: metadaoproject/setup-anchor@v2
      with:
        node-version: ${{ inputs.node-version }}
        solana-cli-version: ${{ inputs.solana-cli-version }}
        anchor-version: ${{ inputs.anchor-version }}
    - name: Cache node_modules
      uses: actions/cache@v3
      with:
        path: ${{ inputs.working-directory }}/node_modules/
        key: node-modules-${{ runner.os }}-build-${{ inputs.node-version }}
    - name: Install node_modules
      run: yarn
      shell: bash
      working-directory: ${{ inputs.working-directory }}
    - name: Create keypair
      run: solana-keygen new --no-bip39-passphrase
      shell: bash
      working-directory: ${{ inputs.working-directory }}
    - name: Make Anchor.toml compatible with runner
      run: sed -i 's:/user/:/runner/:' Anchor.toml
      shell: bash
      working-directory: ${{ inputs.working-directory }}
    - name: Install Cargo toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        components: rustc
    - name: Cache Cargo dependencies
      uses: Swatinem/rust-cache@v2
      with:
          workspaces: ${{ inputs.working-directory }}
    - name: Run tests
      run: anchor test -- --features ${{ inputs.features }}
      shell: bash
      working-directory: ${{ inputs.working-directory }}

